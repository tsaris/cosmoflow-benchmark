#!/bin/bash
# Begin LSF directives
#BSUB -P stf011
#BSUB -J cosmoflow
#BSUB -o logs/cosmoflow.o%J
#BSUB -W 0:30
#BSUB -nnodes 1
#BSUB -alloc_flags "nvme smt4"
#BSUB -N
# End LSF directives and begin shell commands

nnodes=$(cat ${LSB_DJOB_HOSTFILE} | sort | uniq | grep -v login | grep -v batch | wc -l)

INPUTDIR="/gpfs/alpine/world-shared/stf011/atsaris/cosmoflow_data_2020/cosmoUniverse_2019_05_4parE_tf_test"
OUTPUTDIR="/mnt/bb/$USER/"
NTRAIN=100
NVALID=100

echo "Setup mpi4py -- evn"
export PATH=/sw/summit/python/3.7/anaconda3/5.3.0/bin/:$PATH
export LD_LIBRARY_PATH=/sw/summit/python/3.7/anaconda3/5.3.0/bin/:$LD_LIBRARY_PATH

jsrun -n${nnodes} ls -ltrh ${OUTPUTDIR}
echo "Make the directories"
jsrun -n${nnodes} mkdir ${OUTPUTDIR}/train ${OUTPUTDIR}/validation
jsrun -n${nnodes} ls -ltrh ${OUTPUTDIR}

#jsrun -n${nnodes} -a6 -c42 -r1 python scripts/stage_data_summit.py --input_dir ${INPUTDIR}/train --output_dir ${OUTPUTDIR}/train
#jsrun -n${nnodes} -a6 -c42 -r1 python scripts/stage_data_summit.py --input_dir ${INPUTDIR}/validation --output_dir ${OUTPUTDIR}/validation
#jsrun -n${nnodes} -a6 -c42 -r1 python scripts/stage_data.py -n ${NTRAIN} ${INPUTDIR}/train ${OUTPUTDIR}/train
#jsrun -n${nnodes} -a6 -c42 -r1 python scripts/stage_data.py -n ${NVALID} ${INPUTDIR}/validation ${OUTPUTDIR}/validation
jsrun -n${nnodes} ls -ltrh ${OUTPUTDIR}/validation
jsrun -n${nnodes} ls -ltrh ${OUTPUTDIR}/train

#echo "Staging data to NVME"
#jsrun -n${nnodes} -a4 -c20 -r1 mkdir ${OUTPUTDIR}/train ${OUTPUTDIR}/validation
#jsrun -n${nnodes} -a6 -c42 -r1 python scripts/stage_data_summit.py --input_dir ${INPUTDIR}/train --output_dir ${OUTPUTDIR}/train
#jsrun -n${nnodes} -a6 -c42 -r1 python scripts/stage_data_summit.py --input_dir ${INPUTDIR}/validation --output_dir ${OUTPUTDIR}/validation
#echo "DONE staging"
#jsrun -n${nnodes} -a4 -c20 -r1 ls -ltrh ${OUTPUTDIR}

echo "Setup TF -- evn"
#export PATH=/ccs/home/atsaris/.conda/envs/myclone/bin/:$PATH
#export LD_LIBRARY_PATH=/ccs/home/atsaris/.conda/envs/myclone/bin/:$LD_LIBRARY_PATH
#module load ibm-wml-ce/1.6.2-5
#source $WORLDWORK/stf011/junqi/native-build/latest/1.14.0/env.sh

export PATH=/sw/summit/ibm-wml-ce/anaconda-base/envs/ibm-wml-ce-1.6.2-5/bin/:$PATH
export LD_LIBRARY_PATH=/sw/summit/ibm-wml-ce/anaconda-base/envs/ibm-wml-ce-1.6.2-5/bin/:$LD_LIBRARY_PATH

echo "Train multi node scalability"
jsrun -n${nnodes} -a6 -c42 -g6 -r1 --bind=proportional-packed:5 --launch_distribution=packed stdbuf -o0 \
    python train.py -d --rank-gpu configs/cosmo.yaml \
    --output-dir="/gpfs/alpine/world-shared/stf011/atsaris/cosmoflow_output_2020/" \
    --data-dir="/gpfs/alpine/world-shared/stf011/atsaris/cosmoflow_data_2020/cosmoUniverse_2019_05_4parE_tf_test/" \
    --n-train 10 --batch-size 4 --n-epochs 2 --staged-files 1
